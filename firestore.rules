rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {    match /chatrooms/{chatroomId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      
      match /messages/{messageId} {
        allow read: if request.auth != null;
        // Require expiration time for all new messages
        allow create: if request.auth != null
          && request.resource.data.userId == request.auth.uid
          && request.resource.data.text is string
          && request.resource.data.text.size() <= 1000
          && request.resource.data.expiresAt is timestamp
          && request.resource.data.expiresAt <= request.time + duration.hours(8);
        // Allow users to delete their own messages
        allow update, delete: if request.auth != null
          && resource.data.userId == request.auth.uid;
        // Allow automatic deletion of expired messages by any authenticated user
        allow delete: if request.auth != null
          && resource.data.expiresAt < request.time;
      }
    }
      // Trek collection with controlled permissions
    match /treks/{trekId} {
      // Allow anyone to read treks
      allow read: if true;
      // Only allow authenticated users to write
      allow write: if request.auth != null && 
        (request.auth.token.email in ['luckychelani950@gmail.com', 'test@example.com', 'youremail@example.com']);
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
