rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Allow public read access for all files
    match /{allPaths=**} {
      allow read: if true;
    }
    
    // Allow authenticated organizers and admins to upload to trek-related folders
    match /trek-images/{anyPath=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Allow authenticated users to upload to treks folder and any subfolders
    match /treks/{imageId} {
      allow write: if request.auth != null;
    }
    
    match /treks/{wildcard=**} {
      allow write: if request.auth != null;
    }    // For admin-specific uploads, restrict to specific emails
    match /admin/{fileName} {
      allow write: if request.auth != null && 
        (request.auth.token.email in ['luckychelani950@gmail.com', 'test@example.com', 'youremail@example.com']);
    }
    
    // Allow admin users to upload community images
    match /community-images/{fileName} {
      allow write: if request.auth != null && 
        (request.auth.token.email in ['luckychelani950@gmail.com', 'test@example.com', 'youremail@example.com'] ||
        (request.resource.metadata != null && request.resource.metadata.adminUpload == 'true'));
    }
    
    // Allow users to upload their own avatars
    match /avatars/{userId} {
      // Only allow upload if the user ID in the path matches the authenticated user's ID
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
